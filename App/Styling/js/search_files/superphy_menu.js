// Generated by CoffeeScript 1.7.1

/*


 File: superphy_menu.coffee
 Desc: Objects & functions for managing navigation/icon menus in Superphy
 Author: Akiff Manji akiff.manji@gmail.com
 Date: July 24th, 2014
 */

(function() {
  var SuperphyError, SuperphyMenu, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;


  /*
   CLASS SuperphyError
   
   Error object for this library
   */

  SuperphyError = (function(_super) {
    __extends(SuperphyError, _super);

    function SuperphyError(message, name) {
      this.message = message != null ? message : '';
      this.name = name != null ? name : 'Superphy Error';
    }

    return SuperphyError;

  })(Error);

  SuperphyMenu = (function() {
    function SuperphyMenu(menuElem, affix2Elem, pageName, searchList, viewList, searchUrl, redirectSearch) {
      var _ref, _ref1;
      this.menuElem = menuElem;
      this.affix2Elem = affix2Elem;
      this.pageName = pageName;
      this.searchList = searchList;
      this.viewList = viewList;
      this.searchUrl = searchUrl;
      this.redirectSearch = redirectSearch != null ? redirectSearch : false;
      if (!this.menuElem) {
        throw new SuperphyError('SuperphyMenu requires menuElem parameter');
      }
      if (!this.affix2Elem) {
        throw new SuperphyError('SuperphyMenu requires affix2Elem parameter');
      }
      this.iconLocation = '/App/Styling/superphy_icons/';
      this.iconType = 'svg';
      this.iconClasses = {
        'overview': 'overview_icon_large',
        'stx': 'stx_icon_large',
        'phylogeny': 'phylogeny_icon_large',
        'geospatial': 'geospatial_icon_large',
        'vf': 'vf_icon_large',
        'amr': 'amr_icon_large',
        'download': 'download_icon_large',
        'genomelist': 'genomelist_icon_large',
        'alleles': 'alleles_icon_large',
        'msa': 'msa_icon_large'
      };
      this.iconTitles = {
        'overview': 'Overview',
        'stx': "Stx Subtype",
        'phylogeny': 'Phylogenetic Tree',
        'geospatial': 'Geospatial Info',
        'vf': 'Virulence Factors',
        'amr': 'Antimicrobial Resistance',
        'download': 'Download Genome',
        'genomelist': 'Genome List',
        'alleles': 'Alleles',
        'msa': 'Multiple Sequence Alignment'
      };
      this.createNavMenu();
      if ((_ref = this.viewList) != null ? _ref.length : void 0) {
        this.appendList(this.viewList, 'View', false);
      }
      if ((_ref1 = this.searchList) != null ? _ref1.length : void 0) {
        this.appendList(this.searchList, 'Search By', this.redirectSearch);
      }
      this.setAffixActions();
    }

    SuperphyMenu.prototype.createNavMenu = function() {
      this.menuRowEl = jQuery('<div class="row"></div>');
      this.menuAppendToEl = jQuery('<div class="col-md-12 hidden-xs" id="superphy-icon-menu"></div>').appendTo(this.menuRowEl);
      this.menuAffixEl = jQuery('<nav id="menu-affix" class="menu-affix panel panel-default"></nav>').appendTo(this.menuAppendToEl);
      this.mainMenu = jQuery('<ul class="nav"></ul>').appendTo(this.menuAffixEl);
      this.menuRowEl.appendTo(this.menuElem);
      return true;
    };

    SuperphyMenu.prototype.appendList = function(list, header, redirectSearch) {
      var captionEl, count, divEl, headerEl, icon, iconDivEl, iconEl, liEl, linkEl, navEl, newLineEl, rowEl, _i, _len;
      rowEl = jQuery('<div class="row"></div>');
      navEl = jQuery('<ul class="nav"></ul>').appendTo(rowEl);
      headerEl = jQuery('<div class="col-sm-12"></div>').appendTo(navEl);
      jQuery("<div class='panel-heading'><div class='panel-title'>" + header + ":</div></div>").prependTo(headerEl);
      count = list.length % 6 !== 0 ? list.length + 6 - list.length % 6 : list.length;
      for (_i = 0, _len = list.length; _i < _len; _i++) {
        icon = list[_i];
        if (count % 6 === 0) {
          newLineEl = jQuery('<div class="col-sm-12"></div>').appendTo(navEl);
        }
        divEl = jQuery('<div class="col-xs-2"></div>');
        liEl = jQuery('<li></li>').appendTo(divEl);
        if (!(redirectSearch && icon !== 'download')) {
          linkEl = jQuery("<a href='#" + icon + "-panel-header'></a>").appendTo(liEl);
        }
        if (redirectSearch && icon !== 'download') {
          linkEl = jQuery("<a href='/" + this.pageName + "/search#" + icon + "-panel-header'></a>").appendTo(liEl);
        }
        if (icon === 'download') {
          linkEl = jQuery("<a class='genome-dl-link'></a>").appendTo(liEl);
        }
        iconDivEl = jQuery('<div class="superphy-icon"></div>').appendTo(linkEl);
        iconEl = jQuery("<div class='superphy-icon-img " + icon + "' data-toggle='tooltip' title='" + this.iconTitles[icon] + "'></div>").appendTo(iconDivEl);
        captionEl = jQuery("<div class='caption'><small>" + this.iconTitles[icon] + "</small></div>").appendTo(iconDivEl);
        divEl.appendTo(newLineEl);
        count--;
      }
      rowEl.appendTo(this.mainMenu);
      return true;
    };

    SuperphyMenu.prototype.setAffixActions = function() {
      var menu_affix_height, navbar_height, that;
      menu_affix_height = jQuery(this.menuAffixEl).height();
      navbar_height = jQuery('.navbar').height();
      that = this;
      this.menuAffixEl.on('affix.bs.affix', function() {
        jQuery('#accordian').css("margin-top", menu_affix_height + navbar_height);
        jQuery(this).prependTo(jQuery(that.affix2Elem)).hide().fadeIn('slow');
        return jQuery('.superphy-icon').addClass('affix');
      });
      this.menuAffixEl.on('affix-top.bs.affix', function() {
        jQuery('#accordian').css("margin-top", "0px");
        jQuery(this).appendTo(jQuery(that.menuAppendToEl)).hide().fadeIn('slow');
        return jQuery('.superphy-icon').removeClass('affix');
      });
      jQuery('[data-toggle="tooltip"]').tooltip({
        'placement': 'top'
      });
      jQuery(this.menuAffixEl).affix({
        offset: {
          top: menu_affix_height
        }
      });
      jQuery(window).load(function() {
        if (jQuery(this).width() < 1000) {
          return jQuery(that.menuAffixEl).addClass('sm');
        } else {
          return jQuery(that.menuAffixEl).removeClass('sm');
        }
      });
      jQuery(window).resize(function() {
        if (jQuery(this).width() < 1000) {
          return jQuery(that.menuAffixEl).addClass('sm');
        } else {
          return jQuery(that.menuAffixEl).removeClass('sm');
        }
      });
      return true;
    };

    return SuperphyMenu;

  })();

  if (!root.SuperphyMenu) {
    root.SuperphyMenu = SuperphyMenu;
  }

}).call(this);
