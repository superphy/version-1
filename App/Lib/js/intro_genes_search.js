// Generated by CoffeeScript 1.8.0

/*


 File: intro_genes_search.coffee
 Desc: CoffeeScript for genes/search page intros
 Author: Jason Masih jason.masih@phac-aspc.gc.ca
 Date: Sept 9, 2014
 

 Name all files like this intro_[page_name].coffee

 Compiled coffeescript files will be sent to App/Lib/js/. This directory
 contains all Superphy's js files. So this naming scheme will help ensure 
 there are no filename collisions.

 Cakefile has a routine to compile and output the coffeescript files
 in intro/ to js/. To run:

   cake intro
 */

(function() {
  var root, startIntro;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  startIntro = function() {
    var intro, opts;
    opts = viewController.introOptions();
    intro = introJs();
    $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
    opts.splice(0, 0, {
      intro: "You can use this page to determine whether or not specified virulence factors and antimicrobial resistance genes are present in genomes of interest."
    });
    opts.splice(1, 0, {
      element: document.querySelector('#gene-search-tabs'),
      intro: "Use the 'Select Genes' tab to select virulence factors and antimicrobial resistance genes.  Then, use the 'Select Genomes' tab to select your genomes of interest.  Finally, use the 'Submit Query' tab to submit your query.  Modifications to your selections can be made at any time.",
      position: 'top'
    });
    opts.splice(2, 0, {
      element: document.querySelector('#gene-lookup'),
      intro: "Click here for detailed information on specific virulence factors and antimicrobial resistance genes.",
      position: 'left'
    });
    opts.splice(3, 0, {
      element: document.querySelector('.affix-top'),
      intro: "You can choose your search method by selecting virulence factors or by antimicrobial resistance genes.  Your search can consist of either or both virulence factors and antimicrobial resistance genes.",
      position: 'bottom'
    });
    opts.splice(4, 0, {
      element: document.querySelector('#vf-selected-list'),
      intro: "Your selected virulence factors will appear here.  Click the blue 'X' next to a factor to remove it.",
      position: 'bottom'
    });
    opts.splice(5, 0, {
      element: document.querySelector('#vf-autocomplete'),
      intro: "Use this to filter virulence factors by inputted gene name.",
      position: 'bottom'
    });
    opts.splice(6, 0, {
      element: document.querySelector('#vf-table'),
      intro: "Select one or more virulence factors to search for their presence in your specified genomes.  Click the links above to select or unselect all of the virulence factors.",
      position: 'right'
    });
    opts.splice(7, 0, {
      element: document.querySelector("#vf-categories"),
      intro: "You can select from these categories to refine the list of genes.  Click the 'Reset' button to reset your selections.",
      position: 'left'
    });
    opts.splice(8, 0, {
      element: document.querySelector('#amr-selected-list'),
      intro: "Your selected antimicrobial resistance genes will appear here.  Click the blue 'X' next to a factor to remove it.",
      position: 'bottom'
    });
    opts.splice(9, 0, {
      element: document.querySelector('#amr-autocomplete'),
      intro: "Use this to filter antimicrobial resistance genes by inputted gene name.",
      position: 'bottom'
    });
    opts.splice(10, 0, {
      element: document.querySelector('#amr-table'),
      intro: "Select one or more antimicrobial resistance genes to search for their presence in your specified genomes.  Click the links above to select or unselect all of the antimicrobial resistance genes.",
      position: 'right'
    });
    opts.splice(11, 0, {
      element: document.querySelector("#amr-categories"),
      intro: "You can select from these categories to refine the list of genes.  Click the 'Reset' button to reset your selections.",
      position: 'left'
    });
    opts.splice(12, 0, {
      element: document.querySelector('#next-btn1'),
      intro: "Click here to proceed and select your genomes.",
      position: 'right'
    });
    opts.splice(13, 0, {
      element: document.querySelector('#superphy-icon-menu'),
      intro: "You can perform a genome search in three different ways: using the genome list, phylogenetic tree, or map.",
      position: 'top'
    });
    opts.splice(15, 0, {
      element: document.querySelector('.download-view-link'),
      intro: "You have the option to download the content of any of these views.",
      position: 'left'
    });
    opts.splice(16, 0, {
      element: document.querySelector('#selected_genomes'),
      intro: "Your selected genomes will appear here.  Click the blue 'X' next to a factor to remove it.",
      position: 'bottom'
    });
    opts.splice(27, 0, {
      element: document.querySelector('#next-btn2'),
      intro: "Click here to proceed and submit your query.",
      position: 'right'
    });
    opts.splice(28, 0, {
      element: document.querySelector('#search'),
      intro: "Here you can see a summary of your query.  Click 'Submit' to submit your query and get your results.  Click 'Reset' to reset your query.  You can use the tabs to go back and modify your query.",
      position: 'top'
    });
    intro.setOptions({
      steps: opts
    });
    intro.onbeforechange(function(targetElement) {
      return $.each(opts, function(index, step) {
        if ($(targetElement).is(step.element)) {
          switch (index) {
            case 1:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 0);
            case 2:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 0);
            case 3:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 0);
            case 4:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 450);
            case 5:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 450);
            case 6:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 450);
            case 7:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 450);
            case 8:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 1400);
            case 9:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 1400);
            case 10:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 1400);
            case 11:
              $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
              return window.scrollTo(0, 1400);
            case 12:
              return $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
            case 13:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 0);
            case 14:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 0);
            case 15:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 50);
            case 16:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 50);
            case 17:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 100);
            case 18:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 1150);
            case 19:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 1150);
            case 20:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 1200);
            case 21:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 1200);
            case 22:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 2000);
            case 23:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 2000);
            case 24:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 2000);
            case 25:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 2000);
            case 26:
              $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
              return window.scrollTo(0, 2000);
            case 27:
              return $('#gene-search-tabs a[href="#gene-search-genomes"]').tab('show');
            case 28:
              $('#gene-search-tabs a[href="#gene-search-submit"]').tab('show');
              return window.scrollTo(0, 0);
          }
        }
      });
    });
    intro.onchange(function(targetElement) {
      return $.each(opts, function(index, step) {
        if ($(targetElement).is(step.element)) {
          switch (index) {
            case 14:
              return document.getElementById('sidebar-wrapper').style.position = "absolute";
            case 15:
              return document.getElementById('sidebar-wrapper').style.position = "fixed";
          }
        }
      });
    });
    intro.oncomplete(function() {
      return $('#gene-search-tabs a[href="#gene-search-querygenes"]').tab('show');
    });
    intro.start();
    return false;
  };

  if (!root.startIntro) {
    root.startIntro = startIntro;
  }

}).call(this);
