// Generated by CoffeeScript 1.8.0

/*


 File: intro_groups_geophy.coffee
 Desc: CoffeeScript for groups/geophy page intros
 Author: Jason Masih jason.masih@phac-aspc.gc.ca
 Date: Sept 9, 2014
 

 Name all files like this intro_[page_name].coffee

 Compiled coffeescript files will be sent to App/Lib/js/. This directory
 contains all Superphy's js files. So this naming scheme will help ensure 
 there are no filename collisions.

 Cakefile has a routine to compile and output the coffeescript files
 in intro/ to js/. To run:

   cake intro
 */

(function() {
  var root, startIntro;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  startIntro = function() {
    var intro, opts;
    opts = viewController.introOptions();
    opts.splice(0, 0, {
      intro: "The GeoPhy page provides users with the opportunity to view genome data simultaneously on a map and on a tree to answer any potential epidemiological questions."
    });
    opts.splice(1, 0, {
      element: document.querySelector('#submit-btn'),
      intro: "Click 'Highlight Genomes' to isolate your selected genomes on the map and on the tree.",
      position: 'bottom'
    });
    opts.splice(2, 0, {
      element: document.querySelector('#reset-btn'),
      intro: "Click 'Reset Views' to reset genome selections, the map, and the tree.",
      position: 'bottom'
    });
    opts.splice(6, 1, {
      element: document.querySelector('#genome_map1'),
      intro: "The genomes corresponding to locations on the map are shown here.  Check the boxes of any genomes you would like to select.",
      position: 'right'
    });
    intro = introJs();
    intro.setOptions({
      steps: opts
    });
    intro.onbeforechange(function(targetElement) {
      return $.each(opts, function(index, step) {
        if ($(targetElement).is(step.element)) {
          switch (index) {
            case 2:
              return window.scrollTo(0, 0);
            case 3:
              return window.scrollTo(0, 0);
            case 4:
              return window.scrollTo(0, 0);
            case 5:
              return window.scrollTo(0, 0);
            case 8:
              return window.scrollTo(0, 0);
            case 9:
              return window.scrollTo(0, 0);
            case 10:
              return window.scrollTo(0, 0);
            case 11:
              return window.scrollTo(0, 0);
          }
        }
      });
    });
    intro.onchange(function(targetElement) {
      return $.each(opts, function(index, step) {
        if ($(targetElement).is(step.element)) {
          switch (index) {
            case 3:
              return document.getElementById('sidebar-wrapper').style.position = "absolute";
            case 4:
              return document.getElementById('sidebar-wrapper').style.position = "fixed";
          }
        }
      });
    });
    intro.start();
    intro.oncomplete(function() {
      return window.scrollTo(0, 0);
    });
    return false;
  };

  if (!root.startIntro) {
    root.startIntro = startIntro;
  }

}).call(this);
